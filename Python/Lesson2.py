

# 1. Создать список и заполнить его элементами различных типов данных. 
# Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа. 
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

list_a = [[1,2,3], [4.5,5.8], 'строка', (1, 2, 3, 4, 5)]

for i in list_a:
    print("Этот тип называется ", type(i))
    
    
    
# 2. Для списка реализовать обмен значений соседних элементов, 
# т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д. 
# При нечетном количестве элементов последний сохранить на своем месте. 
# Для заполнения списка элементов необходимо использовать функцию input(). 
 

spisok = [int(i) for i in input('Введите значения через пробел: ').split()]
print(spisok)

for i in range(0, len(spisok)-1, 2):
    spisok[i], spisok[i+1] = spisok[i+1], spisok[i]
print(spisok)



# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. 
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень). 
# Напишите решения через list и через dict.

while True:
    user_time = input('введите количество секунд\n')
    if user_time.isdigit():
        user_time = int(user_time)
        break

    print('ошибка ввода, это не число')

# 3.1 By list
for_seasons = int(input('Введите число от 1 до 12: '))

if for_seasons in [12,1,2]:
    print ('This number refers to winter')
elif for_seasons in [3,4,5]:
    print ('This number refers to spring')
elif for_seasons in [6,7,8]:
    print ('This number refers to summer')
elif for_seasons in [9,10,11]:
    print ('This number refers to autumn')
else:
    print ('You have typed number from not diapason, please try better')
    
# # 3.2 By dict

for_seasons = int(input('Введите число от 1 до 12: '))
for_seasons_dict = {'winter': [12,1,2], 'summer': [6,7,8], 'spring': [3,4,5], 'autumn': [9,10,11]}
for key, value in for_seasons_dict.items():
    if for_seasons in value:
        print('This number refers to',key)


# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. 
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать. 
# Если в слово длинное, выводить только первые 10 букв в слове.
    
    
spisok = [str(i) for i in input('Введите значения через пробел: ').split()]    
print(spisok)
num = 0
for i in spisok:   
    num+=1 
    print(num, i[:10])
    
    
# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел. 
# У пользователя необходимо запрашивать новый элемент рейтинга. 
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.

# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.

# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].    
    
# 1. Есть ли число в списке
# 1.1 Если есть, то разместить после
# 1.2 Если нет, то сортировка списка!

my_list = [7, 5, 3, 3, 2]

num = int(input('Введите натуральное число:'))
my_list.append(num)
print(sorted(my_list, reverse=True))
   
 # Добавить элемент и сделать сортировку
   
# 6. *Реализовать структуру данных «Товары». 
# Она должна представлять собой список кортежей. 
# Каждый кортеж хранит информацию об отдельном товаре. 
# В кортеже должно быть два элемента — номер товара и словарь с параметрами 
# (характеристиками товара: название, цена, количество, единица измерения). 
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:

# [
#     (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#     (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}), 
#     (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах. 
# Реализовать словарь, в котором каждый ключ — характеристика товара, 
# например название, а значение — список значений-характеристик, например список названий товаров.
# Пример:
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }

goods = []
while input("Would you like add product? Enter yes/no: ") == 'yes':
    number = int(input("Enter product number: "))
    features = {}
    while input("Would you like add product parameters? Enter yes/no: ") == 'yes':
        feature_key = input("Enter feature product: ")
        feature_value = input("Enter feature value product: ")
        features[feature_key] = feature_value
    goods.append(tuple([number, features]))
print(goods) 

analitics = {}
for good in goods:
    for feature_key, feature_value in good[1].items():
        if feature_key in analitics:
            analitics[feature_key].append(feature_value)
        else:
         analitics[feature_key] = [feature_value]
print(analitics)
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    